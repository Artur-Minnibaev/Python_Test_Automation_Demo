version: "3.8"

services:
  selenium-hub:
    image: selenium/hub:4.20
    container_name: selenium-hub
    platform: linux/amd64
    ports:
      - "4444:4444"
    healthcheck:
      test: curl --fail http://localhost:4444/status || exit 1
      interval: 10s
      retries: 3
      start_period: 15s
      timeout: 5s
    restart: always

  chrome:
    image: selenium/node-chrome:4.20.0
    platform: linux/amd64
    shm_size: "8gb"
    healthcheck:
      test: curl --fail http://selenium-hub:4444/status || exit 1
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    depends_on:
      selenium-hub:
        condition: service_healthy
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=1
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    deploy:
      replicas: 3
    restart: always

  firefox:
    image: selenium/node-firefox:4.9.0
    platform: linux/amd64
    shm_size: "8gb"
    healthcheck:
      test: curl --fail http://selenium-hub:4444/status || exit 1
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    depends_on:
      selenium-hub:
        condition: service_healthy
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=1
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_SESSION_TIMEOUT=300
    deploy:
      replicas: 3
    restart: always

  all-tests:
    image: all-tests:v1
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/usr/Python_Test_Automation_Demo
    command: >
      sh -c "rm -rf allure-results && pytest -sv tests/ui_tests/test_block_book_store_application.py::TestLogin::test_login --alluredir=allure-results --run-mode=docker"
    working_dir: /usr/Python_Test_Automation_Demo
    depends_on:
      selenium-hub:
        condition: service_healthy
      chrome:
        condition: service_healthy
      firefox:
        condition: service_healthy
      main-postgres:
        condition: service_healthy
    restart: on-failure

  report:
    image: all-tests:v1
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/usr/Python_Test_Automation_Demo
    command: /bin/sh -c "rm -rf allure-report && allure generate allure-results --clean -o allure-report"
    working_dir: /usr/Python_Test_Automation_Demo
    depends_on:
      all-tests:
        condition: service_completed_successfully
      main-postgres:
        condition: service_healthy
    restart: on-failure

  main-postgres:
    image: postgres:latest
    container_name: main-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d test_db" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s
    restart: on-failure

networks:
  default:
    driver: bridge