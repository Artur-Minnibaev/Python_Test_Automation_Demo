name: Automated Tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: "Select test type"
        required: true
        default: ui_tests
        type: choice
        options:
          - ui_tests
          - integration_tests
          - api_tests

      run_mode:
        description: "Choose option"
        required: true
        default: "local"
        type: choice
        options:
          - local
          - docker

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        if: github.event.inputs.run_mode == 'local'
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        if: github.event.inputs.run_mode == 'local'
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome
        if: github.event.inputs.run_mode == 'local'
        run: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      # ðŸ”¹ Running tests LOCAL
      - name: UI tests
        if: "github.event.inputs.run_mode == 'local' && github.event.inputs.deployment_target == 'ui_tests'"
        run: pytest tests/ui_tests --alluredir=allure-results

      - name: Integration tests
        if: "github.event.inputs.run_mode == 'local' && github.event.inputs.deployment_target == 'integration_tests'"
        run: pytest tests/integration --alluredir=allure-results

      - name: API tests
        if: "github.event.inputs.run_mode == 'local' && github.event.inputs.deployment_target == 'api_tests'"
        run: pytest tests/api --alluredir=allure-results

      # ðŸ”¹ Docker mode
      - name: Login to Docker Hub
        if: github.event.inputs.run_mode == 'docker'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker containers
        if: github.event.inputs.run_mode == 'docker'
        run: docker-compose -f docker-compose.yml build

      - name: Start containers
        if: github.event.inputs.run_mode == 'docker'
        run: docker-compose -f docker-compose.yml up -d
        continue-on-error: true

      - name: Run tests inside container
        if: github.event.inputs.run_mode == 'docker'
        run: docker-compose -f docker-compose.yml run all-tests

      - name: Shutdown containers
        if: github.event.inputs.run_mode == 'docker'
        run: docker-compose -f docker-compose.yml down

      # ðŸ”¹ Saving tests results
      - name: Store allure-results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report

    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: "21"

      - run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - run: allure generate -c allure-results -o _site

      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Tests report

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4